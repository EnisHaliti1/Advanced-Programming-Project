name: Build and deliver containers

on:
  push:
    branches: ["**"]
  workflow_dispatch:

jobs:
  patientservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver patient-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"

      - name: Build, test and package project
        working-directory: ./patient-service
        run: mvn -B -ntp clean package -DskipTests

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/patient-service:latest ./patient-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/patient-service:latest

  doctorservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver doctor-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"

      - name: Build, test and package project
        working-directory: ./doctor-service
        run: mvn -B -ntp clean package -DskipTests

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/doctor-service:latest ./doctor-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/doctor-service:latest

  appointmentservice:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver appointment-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"

      - name: Build, test and package project
        working-directory: ./appointment-service
        run: mvn -B -ntp clean package -DskipTests

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/appointment-service:latest ./appointment-service

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/appointment-service:latest

  apigateway:
    runs-on: ubuntu-latest
    name: Java 17 build, test, deliver api-gateway container
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: "maven"

      - name: Build, test and package project
        working-directory: ./api-gateway
        run: mvn -B -ntp clean package -DskipTests

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/api-gateway:latest ./api-gateway

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/api-gateway:latest
